using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data.SqlClient;
using System.Data;

namespace frmCyclone.CapaAccesoDatos
{
    class AD_Exploiter
    {
        Conexion conn = new Conexion(); //Crear el objeto de conexion

        //Metodo de mostrar la tabla
        public DataTable SelectExploiter()
        {
            
            DataTable tablaExploiter = new DataTable();
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommand cmdSelExploiter = new SqlCommand();
            cmdSelExploiter.CommandText = "sp_Consulta_Exploiter";
            cmdSelExploiter.Connection = conn.conexionCiclone();
            cmdSelExploiter.CommandType = CommandType.StoredProcedure; 
            //No se requiere comentarios
                                  
            cmdSelExploiter.ExecuteNonQuery();
            adapter.SelectCommand = cmdSelExploiter;
            adapter.Fill(tablaExploiter);

            conn.conexionCiclone();
            return tablaExploiter;
        }

        public void insertExploiter(int codigoExploiter, int codigoEmpleado, string nivelUser,
                                   string nombreUser, string userPass, string activo)
        {
            //comando de insertar
            SqlCommand cmdInsExploiter = new SqlCommand();
            cmdInsExploiter.CommandText = "sp_Inserta_Exploiter";
            cmdInsExploiter.Connection = conn.conexionCiclone();
            cmdInsExploiter.CommandType = CommandType.StoredProcedure;

            //Pasar los parametros a la consulta de insertar
            cmdInsExploiter.Parameters.Add(new SqlParameter("@CodigoUsuario", codigoExploiter));
            cmdInsExploiter.Parameters.Add(new SqlParameter("@CodigoEmpleado", codigoEmpleado));
            cmdInsExploiter.Parameters.Add(new SqlParameter("@NivelAcceso", nivelUser));
            cmdInsExploiter.Parameters.Add(new SqlParameter("@NombreUsuario", nombreUser));
            cmdInsExploiter.Parameters.Add(new SqlParameter("@Password", userPass));
            cmdInsExploiter.Parameters.Add(new SqlParameter("@Activo", activo));
            
            
            cmdInsExploiter.ExecuteNonQuery();
            conn.conexionCiclone();
        }

        public void deleteExploiter(int codigoExploiter)
        {
            //comando de eliminar
            SqlCommand cmdDelExploiter = new SqlCommand();
            cmdDelExploiter.CommandText = "sp_Elimina_Exploiter";
            cmdDelExploiter.Connection = conn.conexionCiclone();
            cmdDelExploiter.CommandType = CommandType.StoredProcedure;

            //Pasar parametro a la consulta
            cmdDelExploiter.Parameters.Add(new SqlParameter("@CodigoUsuario",codigoExploiter));

            cmdDelExploiter.ExecuteNonQuery();
            conn.conexionCiclone();
        }

        public void updateExploiter(int codigoExploiter, int codigoEmpleado, string nivelUser,
                                   string nombreUser, string userPass, string activo)
        {
            //comando de modificar
            SqlCommand cmdUpdExploiter = new SqlCommand();
            cmdUpdExploiter.CommandText = "sp_Modifica_Exploiter";
            cmdUpdExploiter.Connection = conn.conexionCiclone();
            cmdUpdExploiter.CommandType = CommandType.StoredProcedure;

            //pasar los paramtros a la consulta
            cmdUpdExploiter.Parameters.Add(new SqlParameter("@CodigoUsuario", codigoExploiter));
            cmdUpdExploiter.Parameters.Add(new SqlParameter("@CodigoEmpleado", codigoEmpleado));
            cmdUpdExploiter.Parameters.Add(new SqlParameter("@NivelAcceso", nivelUser));
            cmdUpdExploiter.Parameters.Add(new SqlParameter("@NombreUsuario", nombreUser));
            cmdUpdExploiter.Parameters.Add(new SqlParameter("@Password", userPass));
            cmdUpdExploiter.Parameters.Add(new SqlParameter("@Activo", activo));

            cmdUpdExploiter.ExecuteNonQuery();
            conn.conexionCiclone();
        }
    }
}
