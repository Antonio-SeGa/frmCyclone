using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
//agregar librerias para solucionar errores de codigo del nuevo metodo 
using System.Data;
using System.IO;

namespace frmCyclone.CapaNegocio
{
    class FN_Exploiter
    {
        private CapaAccesoDatos.AD_Exploiter objCDExploiter = new CapaAccesoDatos.AD_Exploiter();
        public int codigoExploiter { get; set; }
        public int codigoEmpleado { get; set; }
        public string nivelUser { get; set; }
        public string nombreUser { get; set; }
        public string userPass { get; set; }
        public string activo { get; set; }
        
        //Constructores
        public FN_Exploiter() { }

        public FN_Exploiter(int codigoExploiter, int codigoEmpleado, string nivelUser, string nombreUser, string userPass, string activo)
        {
            this.codigoExploiter = codigoExploiter;
            this.codigoEmpleado = codigoEmpleado;
            this.nivelUser = nivelUser;
            this.nombreUser = nombreUser;
            this.userPass = userPass;
            this.activo = activo;
        }

        //Cargar tabla
        public DataTable CargaTablaExploiter()
        {
            DataTable tablaExploiter = new DataTable();
            tablaExploiter = objCDExploiter.SelectExploiter();
            return tablaExploiter; //retorna la tabla
        }

        public void parInsertExploiter(string codigoExploiter, string codigoEmpleado, string nivelUser, string nombreUser, string userPass, string activo)
        {
            //mandar los parametros
            objCDExploiter.insertExploiter(Convert.ToInt32(codigoExploiter), Convert.ToInt32(codigoEmpleado), nivelUser, nombreUser, userPass, activo);
        }

        public void parDeleteExploiter(string codigoExploiter) 
        {
            //mandar los parametros
            objCDExploiter.deleteExploiter(Convert.ToInt32(codigoExploiter));
        }
        public void parUpdateExploiter(string codigoExploiter, string codigoEmpleado, string nivelUser, string nombreUser, string userPass, string activo)
        {
            //mandar los parametros
            objCDExploiter.updateExploiter(Convert.ToInt32(codigoExploiter), Convert.ToInt32(codigoEmpleado), nivelUser, nombreUser, userPass, activo);
        }
    }
}
